###############
## Arguments ##
###############

initial_stock_price = 50
initial_volatility = 0.1 ^2
time_to_maturity = 50
seed = 2
scale = 365 # Daily measuremen
alpha = 0
lambda =  7
jumps_intensity_parameters = list(mean = 0,
                                  sd = 0.2)
rho = 0
kappa = -1 / time_to_maturity
kappa = 2
theta = 0.1
sigma = .1


##############################
## Create the correlated BM ##
##############################

bms <- RandomWalk::sbmotionGenerator(time_to_maturity = time_to_maturity,
                                     scale = scale,
                                     seed = seed,
                                     n = 2)

W1 <- bms$'1'$brownian_motion_path
W2 <- bms$'2'$brownian_motion_path

B1 <- W1
B2 <- rho * W1 + sqrt( 1 - rho ^2) * W2

dB1 <- diff(B1)
dB2 <- diff(B2)

##################################
## Create the volatility vector ##
##################################

v <- vector(mode = "double", length = time_to_maturity * scale + 1)
v[1] <- initial_volatility
t <- seq(0, time_to_maturity, length.out = time_to_maturity * scale + 1)
dt <- (diff(t))
for(i in 1 : (time_to_maturity * scale)){
    v[i+1] <- v[i] + kappa * (theta - v[i]) * dt[i] + sigma * sqrt(v[i]) * dB2[i]
}

##################
## mean and var ##
##################
## For the following test case, to get more precise estimation, the time_to_maturity should be
## fixed at 50 e.g.

mean(v)
exp(-kappa * time_to_maturity) * initial_volatility + theta * (1 - exp(-kappa * time_to_maturity))

var(v)
(theta * sigma ^2) / (2 * kappa)

##################################
## Create the stock price model ##
##################################

s <- vector(mode = "double", length = time_to_maturity * scale + 1)
ds <- vector(mode = "double", length = time_to_maturity * scale)
s[1] <- initial_stock_price
for(i in 1: (time_to_maturity * scale)){
    ds[i] <- alpha * s[i] * dt[i] + sqrt(v[i]) * s[i] * dB1[i]
    # ds[i] <- alpha * s[i] * dt[i] + 0.20 * s[i] * dB1[i]
    s[i + 1] <- s[i] + ds[i]
}

####################################
## Plot the stock price evolution ##
####################################

S <- data.frame(t = t, s = s)
library(ggplot2)
ggplot(S, aes(x = t, y = s)) +
    geom_line()


S <- sstock(time_to_maturity = time_to_maturity, seed  = seed, scale = 365,
            sigma = .04)
library(ggplot2)
ggplot(S, aes(x = time_periods, y = stock_price_path)) +
    geom_line()

